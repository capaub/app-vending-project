networks:
  vending-app-network:

services:

  mysql:
    image: mysql
    container_name: mysql-vending-app
    restart: always
    environment:
      MYSQL_DATABASE: vending_app
      MYSQL_ROOT_USERNAME: root
      MYSQL_ROOT_PASSWORD: ACDS
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    ports:
      - 3307:3306
    networks:
      - vending-app-network

  mongo:
    image: mongo
    container_name: mongo-vending-app
    environment:
      MONGO_INITDB_DATABASE: vending_app
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ACDS
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    ports:
      - 27018:27017
    networks:
      - vending-app-network

  configserver:
    image: capaub/config-server-vending-app
    mem_limit: 700m
    ports:
      - 8084:9090
    networks:
      - vending-app-network
    healthcheck:
      test: curl --fail --silent localhost:9090/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  eurekaserver:
    image: capaub/eureka-server-vending-app
    mem_limit: 700m
    ports:
      - 8085:9091
    networks:
      - vending-app-network
    healthcheck:
      test: curl --fail --silent localhost:9091/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:9090/

  company:
    image: capaub/ms-company-vending-app
    mem_limit: 700m
    ports:
      - 8086:9092
    networks:
      - vending-app-network
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:9092/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:9090/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-vending-app:3306/vending_app
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

  customer:
    image: capaub/ms-customer-vending-app
    mem_limit: 700m
    ports:
      - 8087:9093
    networks:
      - vending-app-network
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:9093/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:9090/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-vending-app:3306/vending_app
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

  external-api:
    image: capaub/ms-external-api-vending-app
    mem_limit: 700m
    ports:
      - 8088:9094
    networks:
      - vending-app-network
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:9094/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:9090/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-vending-app:3306/vending_app
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

  product:
    image: capaub/ms-product-vending-app
    mem_limit: 700m
    ports:
      - 8089:9095
    networks:
      - vending-app-network
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      mysql:
        condition: service_healthy
      external-api:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:9095/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:9090/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-vending-app:3306/vending_app
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

  vending-service:
    image: capaub/ms-vending-vending-app
    mem_limit: 700m
    ports:
      - 8000:8000
    networks:
      - vending-app-network
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      company:
        condition: service_healthy
      customer:
        condition: service_healthy
      product:
        condition: service_healthy
      mongo:
        condition: service_healthy
      external-api:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent vending-service:8000/healthcheck.php || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MONGO_URI: mongodb://mongo-vending-app:27017/vending_app
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

  sprint-chart-js:
    image: capaub/sprint-chart-js-vending-app
    mem_limit: 700m
    ports:
      - 8090:9096
    networks:
      - vending-app-network
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      mysql:
        condition: service_healthy
      vending-service:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:9096/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:9090/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-vending-app:3306/vending_app
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

  webapp:
    image: capaub/ms-webapp-vending-app
    mem_limit: 700m
    ports:
      - 8091:9097
    networks:
      - vending-app-network
    volumes:
      - ./uploads:/uploads
    depends_on:
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      company:
        condition: service_healthy
      customer:
        condition: service_healthy
      external-api:
        condition: service_healthy
      product:
        condition: service_healthy
      vending-service:
        condition: service_healthy
      sprint-chart-js:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:9097/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CONFIG_IMPORT: configserver:http://configserver:9090/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:9091/eureka/

#       docker-compose up -d permettra de démarrer l'ensemble des conteneurs en arrière-plan ;
#       docker-compose ps permettra de voir le statut de l'ensemble de la stack ;
#       docker-compose logs -f --tail 5 permettra d'afficher les logs de la stack ;
#       docker-compose stop permettra d'arrêter l'ensemble des services d'une stack ;
#       docker-compose down permettra de détruire l'ensemble des ressources d'une stack ;
#       docker-compose config permettra de valider la syntaxe du fichier docker-compose.yml ;